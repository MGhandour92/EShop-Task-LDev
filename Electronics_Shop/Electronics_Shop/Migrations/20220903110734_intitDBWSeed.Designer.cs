// <auto-generated />
using Electronics_Shop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Electronics_Shop.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220903110734_intitDBWSeed")]
    partial class intitDBWSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Electronics_Shop.Models.Category", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Name = "TVs"
                        },
                        new
                        {
                            Id = (short)2,
                            Name = "Laptops"
                        },
                        new
                        {
                            Id = (short)3,
                            Name = "Sound Systems"
                        });
                });

            modelBuilder.Entity("Electronics_Shop.Models.OrderHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliverToAddress")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.HasKey("Id");

                    b.ToTable("OrderHeader");
                });

            modelBuilder.Entity("Electronics_Shop.Models.OrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AfterDiscountPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderHeaderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderHeaderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderLine");
                });

            modelBuilder.Entity("Electronics_Shop.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<short>("CategoryId")
                        .HasColumnType("smallint");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<byte>("DisountToApply")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = (short)1,
                            Description = "Samsung TV 32 inch",
                            DisountToApply = (byte)10,
                            Name = "Samsung 32",
                            UnitPrice = 2500m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = (short)1,
                            Description = "LG TV 32 Inch Satellite",
                            DisountToApply = (byte)20,
                            Name = "LG 32",
                            UnitPrice = 3000m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = (short)1,
                            Description = "Toshiba 49 inch oled",
                            DisountToApply = (byte)0,
                            Name = "Toshiba 49",
                            UnitPrice = 5000m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = (short)1,
                            Description = "Toshiba 64 inch QLED",
                            DisountToApply = (byte)15,
                            Name = "Toshiba 64",
                            UnitPrice = 9000m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = (short)1,
                            Description = "LG 50 inch QLED",
                            DisountToApply = (byte)30,
                            Name = "LG 50",
                            UnitPrice = 10000m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = (short)1,
                            Description = "Samsung 65 QLED 4K",
                            DisountToApply = (byte)25,
                            Name = "Samsung 65",
                            UnitPrice = 15000m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = (short)2,
                            Description = "HP Probook 15 inch i7 G3",
                            DisountToApply = (byte)10,
                            Name = "HP Probook",
                            UnitPrice = 11000m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = (short)2,
                            Description = "Dell Latitude 15 inch i5",
                            DisountToApply = (byte)0,
                            Name = "Dell Latitude",
                            UnitPrice = 9500m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = (short)2,
                            Description = "Lenovo Thinkpad 15 inch i5",
                            DisountToApply = (byte)15,
                            Name = "Lenovo Thinkpad",
                            UnitPrice = 9000m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = (short)2,
                            Description = "Dell Vostro 15 inch FHD i7",
                            DisountToApply = (byte)0,
                            Name = "Dell Vostro",
                            UnitPrice = 10500m
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = (short)3,
                            Description = "YHT-4950U 4K Ultra HD 5.1-Channel Home Theater System with Bluetooth",
                            DisountToApply = (byte)5,
                            Name = "Yamaha",
                            UnitPrice = 10800m
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = (short)3,
                            Description = "Sony Complete 8 Speaker System- SSCS3 (2), SSCS5, SSCS8, SACS9, SSCSE",
                            DisountToApply = (byte)15,
                            Name = "Sony",
                            UnitPrice = 25000m
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = (short)3,
                            Description = "JBL Professional EON208P Portable All-in-One 2-way PA System with 8-Channel Mixer and Bluetooth",
                            DisountToApply = (byte)0,
                            Name = "JBL",
                            UnitPrice = 16000m
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = (short)3,
                            Description = "Logitech Z906 5.1 Surround Sound Speaker System - THX, Dolby Digital and DTS Digital Certified - Black",
                            DisountToApply = (byte)5,
                            Name = "Logitech",
                            UnitPrice = 8000m
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = (short)3,
                            Description = "Klipsch Black Reference Theater Pack 5.1 Surround Sound System",
                            DisountToApply = (byte)10,
                            Name = "Klipsch",
                            UnitPrice = 6000m
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = (short)3,
                            Description = "Earthquake Sound DJ-Array Gen2 4x4 Line Array Loudspeaker System, Set of 2",
                            DisountToApply = (byte)0,
                            Name = "Earthquake",
                            UnitPrice = 8750m
                        });
                });

            modelBuilder.Entity("Electronics_Shop.Models.OrderLine", b =>
                {
                    b.HasOne("Electronics_Shop.Models.OrderHeader", "OrderHeader")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Electronics_Shop.Models.Product", "Product")
                        .WithMany("OrderLines")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderHeader");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Electronics_Shop.Models.Product", b =>
                {
                    b.HasOne("Electronics_Shop.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Electronics_Shop.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Electronics_Shop.Models.OrderHeader", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("Electronics_Shop.Models.Product", b =>
                {
                    b.Navigation("OrderLines");
                });
#pragma warning restore 612, 618
        }
    }
}
